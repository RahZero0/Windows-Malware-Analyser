const { parentPort } = require('worker_threads');
const util = require('util');
const { exec } = require('child_process');
const fs = require('fs').promises;

const execPromise = util.promisify(exec);

parentPort.on('message', async (command_help) => {
  try {
    const command = `${command_help.split('^')[0]} ${command_help.split('^')[1]} ${command_help.split('^')[2]} ${command_help.split('^')[4]} ${command_help.split('^')[5]}`;

    // Execute the command with an increased maxBuffer size (e.g., 10MB)
    const { stdout } = await execPromise(command, { maxBuffer: 10 * 1024 * 1024 });

    await fs.writeFile(command_help.split('^')[3], stdout);

  } catch (error) {
    console.error('Error:', error);
  } finally {
    parentPort.postMessage('done');
  }
});
